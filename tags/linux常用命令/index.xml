<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux常用命令 on Arlettebrook's blog</title><link>https://arlettebrook.github.io/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><description>Recent content in Linux常用命令 on Arlettebrook's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Arlettebrook</copyright><lastBuildDate>Wed, 08 May 2024 19:24:26 +0800</lastBuildDate><atom:link href="https://arlettebrook.github.io/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Common Commands</title><link>https://arlettebrook.github.io/p/linux-common-commands/</link><pubDate>Wed, 08 May 2024 19:24:26 +0800</pubDate><guid>https://arlettebrook.github.io/p/linux-common-commands/</guid><description>&lt;hr>
&lt;blockquote>
&lt;p>Linux常用命令有很多，本文不会逐个介绍。以下命令是我在后期使用中遇到的，算是我对Linux常用命令的补充、回顾、总结。本篇文章阅读需要一定的Linux基础。更多常见命令可参考：&lt;a class="link" href="https://wiki.deepin.org/zh/04_%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98FAQ/600%E6%9D%A1Linux%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93" target="_blank" rel="noopener"
>600条Linux命令总结&lt;/a>。&lt;/p>
&lt;p>&lt;strong>持续更新中&amp;hellip;&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="ln">
&lt;a href="#ln" class="header-anchor">#&lt;/a>
ln
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;code>ln&lt;/code>命令在Linux系统中用于&lt;strong>创建文件链接&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>Linux中文件链接的方式有两种：
&lt;ul>
&lt;li>&lt;strong>符号链接&lt;/strong>（也称为软链接Symbolic Link）：包含了到原文件的路径信息，相当于一个指向原文件的&lt;strong>快捷方式&lt;/strong>。
&lt;ul>
&lt;li>符号链接有自己的文件属性及权限等。&lt;/li>
&lt;li>可对不存在的文件或目录创建符号链接。&lt;/li>
&lt;li>符号链接可交叉文件系统，即可以在不同的文件系统之间创建。&lt;/li>
&lt;li>删除符号链接并不影响被指向的文件，但若被指向的原文件被删除，则相关符号链接被称为死链接（dangling link）。若被指向的文件重新被创建，死链接可恢复为正常的符号链接。&lt;/li>
&lt;li>符号链接文件的大小是其指向的文件的路径字符串的字节数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>硬链接&lt;/strong>：硬链接本质上是给一个文件取一个新的名称，原文件和硬链接在物理上仍然是同一个文件。它们共享相同的inode（索引节点）和数据块。
&lt;ul>
&lt;li>创建硬链接会在对应的目录中增加额外的记录项以引用文件。&lt;/li>
&lt;li>原文件和硬链接文件对应于同一文件系统上的一个物理文件。&lt;/li>
&lt;li>创建硬链接时原文件的连接数（i_nlink）会递增。即&lt;strong>硬链接数&lt;/strong>递增。&lt;/li>
&lt;li>删除文件时，&lt;code>rm&lt;/code>命令会递减计数的链接数。文件要是存在，至少有一个链接数。当链接数为零时，该文件才会被真正删除。&lt;/li>
&lt;li>硬链接不能跨域驱动器或分区，也不支持对目录创建硬链接。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>总结来说，符号链接（软链接）和硬链接的主要区别在于：
&lt;ul>
&lt;li>符号链接是一个独立的文件，它包含了到原文件的路径信息（&lt;strong>快捷方式&lt;/strong>）；而硬链接则与原文件共享相同的inode和数据块（&lt;strong>文件别名&lt;/strong>）。&lt;/li>
&lt;li>符号链接可以&lt;strong>跨文件系统&lt;/strong>，并且可以对不存在的文件或目录创建；而硬链接则&lt;strong>不能跨域驱动器或分区&lt;/strong>，&lt;strong>也不能对目录创建&lt;/strong>。&lt;/li>
&lt;li>删除符号链接不影响原文件，但删除原文件会使符号链接成为死链接；而删除硬链接文件时，只有当所有硬链接都被删除且原文件的链接数为零时，文件才会被真正删除。即硬链接数为0，文件才真正被删除。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>这个命令允许你在不同的位置为同一个文件或目录建立同步的链接，从而避免了在多个位置重复存储相同的文件内容，&lt;strong>节省了磁盘空间&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>ln&lt;/code>命令的基本语法如下&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ln &lt;span class="o">[&lt;/span>选项&lt;span class="o">]&lt;/span> &amp;lt;源文件或目录&amp;gt; &amp;lt;链接文件或目录&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>常用选项包括：
&lt;ul>
&lt;li>&lt;code>-s&lt;/code>：创建符号链接（软链接）。这会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，而是保存了原始文件的路径。（创建快捷方式）
&lt;ul>
&lt;li>&lt;strong>不使用&lt;code>-s&lt;/code>选项时创建硬链接&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-f&lt;/code>：强制执行，如果链接文件已存在则覆盖。&lt;/li>
&lt;li>&lt;code>-v&lt;/code>：显示详细的输出信息。&lt;/li>
&lt;li>&lt;code>--help&lt;/code>：查看帮助文档。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>理解记忆：ln可以理解为link的缩写，s可以理解为soft软的意思。&lt;/li>
&lt;li>注意：源文件一般用绝对路径，相对会出现死链接情况。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>简单介绍一些&lt;code>ls -lh&lt;/code>输出&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ ls -lh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total 20K
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root 19K May &lt;span class="m">8&lt;/span> 22:49 abc.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxr-xr-x. &lt;span class="m">3&lt;/span> root root &lt;span class="m">18&lt;/span> May &lt;span class="m">8&lt;/span> 23:15 demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># l显示详细信息，h文件大小用人类可读懂的方式显示。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw- r-- r--
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-开头表示文件，d表示目录，l表示链接，三位为一组用rwx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwx r-x r-x
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">当前用户权限 用户所属组权限 其他用户权限
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">数字1表示硬链接数，理解为别名，别名为0，文件才会被删除。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">有多少种方式可以访问该文件或目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 文件一般为1：绝对路径
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 目录只有一层一般为2：绝对和cd .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2层为3：绝对、cd . 、cd ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root ：拥有者
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root ：所在组，没指定默认同名。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5月 &lt;span class="m">8&lt;/span> 22:49 文件最后修改日期时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">最后：文件或目录名称
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">有箭头表示软连接，没有硬链接。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>演示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">localhost &lt;span class="nb">test&lt;/span> $ ls -lh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total 20K
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">1&lt;/span> root root 19K May &lt;span class="m">8&lt;/span> 22:49 abc.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxr-xr-x. &lt;span class="m">3&lt;/span> root root &lt;span class="m">18&lt;/span> May &lt;span class="m">8&lt;/span> 23:46 demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost &lt;span class="nb">test&lt;/span> $ ln -sv ~/test/abc.txt ./demo/soft
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">‘./demo/soft’ -&amp;gt; ‘/root/test/abc.txt’
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost &lt;span class="nb">test&lt;/span> $ ln -v ~/test/abc.txt ./demo/hard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">‘./demo/hard’ &lt;span class="o">=&lt;/span>&amp;gt; ‘/root/test/abc.txt’
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost &lt;span class="nb">test&lt;/span> $ ls -lh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total 20K
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">2&lt;/span> root root 19K May &lt;span class="m">8&lt;/span> 22:49 abc.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxr-xr-x. &lt;span class="m">3&lt;/span> root root &lt;span class="m">42&lt;/span> May &lt;span class="m">8&lt;/span> 23:46 demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost &lt;span class="nb">test&lt;/span> $ &lt;span class="nb">cd&lt;/span> demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">localhost demo $ ls -lh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total 20K
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r--. &lt;span class="m">2&lt;/span> root root 19K May &lt;span class="m">8&lt;/span> 22:49 hard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lrwxrwxrwx. &lt;span class="m">1&lt;/span> root root &lt;span class="m">18&lt;/span> May &lt;span class="m">8&lt;/span> 23:46 soft -&amp;gt; /root/test/abc.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：测试环境是在Linux中，&lt;code>ln&lt;/code>命令并不适用于windows环境。创建的文件链接无效。&lt;/p>
&lt;hr>
&lt;h2 id="curl">
&lt;a href="#curl" class="header-anchor">#&lt;/a>
curl
&lt;/h2>&lt;p>&lt;code>curl&lt;/code>命令是一个利用URL规则在命令行下工作的文件传输工具，它支持文件的上传和下载，因此被视为综合传输工具，但传统上习惯称其为下载工具。curl支持包括HTTP、HTTPS、FTP等众多协议，并具备多种特性，如POST、cookies、认证、从指定偏移处下载部分文件、用户代理字符串、限速、文件大小、进度条等。这些特性使得curl在处理网页处理流程和数据检索自动化方面非常有用。&lt;/p>
&lt;p>总结：用于发送网络请求，可以下载和上传文件。而&lt;code>wget&lt;/code>只能用于下载文件，但&lt;a class="link" href="#wget" >wget&lt;/a>下载文件的功能比&lt;code>curl&lt;/code>强大。&lt;/p>
&lt;p>安装：&lt;/p>
&lt;ol>
&lt;li>linux系统：根据你的Linux发行版，使用相应的包管理器来安装curl。
&lt;ul>
&lt;li>对于Debian/Ubuntu系统，使用apt-get命令安装：&lt;code>sudo apt install curl&lt;/code>&lt;/li>
&lt;li>对于CentOS/Fedora系统，使用yum命令安装：&lt;code>sudo yum install curl&lt;/code>&lt;/li>
&lt;li>对于Arch Linux系统，使用pacman命令安装：&lt;code>sudo pacman -S curl&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>windows系统：
&lt;ol>
&lt;li>&lt;a class="link" href="https://curl.se/download.html" target="_blank" rel="noopener"
>官网&lt;/a>下载对应版本，添加一个CURL_HOME环境变量名，指向的是curl.exe文件所在路径。并将其添加到path环境变量中。&lt;/li>
&lt;li>或者安装&lt;a class="link" href="https://www.msys2.org/" target="_blank" rel="noopener"
>msys2&lt;/a>利用pacman包管理器安装。【推荐】：&lt;code>sudo pacman -S curl&lt;/code>&lt;/li>
&lt;li>或者安装&lt;a class="link" href="https://www.mingw-w64.org/downloads/#mingw-builds" target="_blank" rel="noopener"
>Mingw&lt;/a>自带curl，Mingw也可以用msys2来安装。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>MacOS系统自带。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>基本使用&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>curl命令的基本语法格式为：&lt;code>curl [选项] URL&lt;/code>。其中，URL是要请求的目标地址，而选项则用于指定各种参数和功能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-X&lt;/code> 或 &lt;code>--request&lt;/code>：用于指定HTTP请求方法，如GET、POST、PUT、DELETE等。&lt;/p>
&lt;ul>
&lt;li>默认发送get请求。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-SHELL" data-lang="SHELL">&lt;span class="line">&lt;span class="cl">curl -X POST http://example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>-H&lt;/code> 或 &lt;code>--header&lt;/code>: 添加自定义的 HTTP 头信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-SHELL" data-lang="SHELL">&lt;span class="line">&lt;span class="cl">curl -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> http://example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>-d&lt;/code> 或 &lt;code>--data&lt;/code>: 发送 POST 请求时，将数据作为请求体发送。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-SHELL" data-lang="SHELL">&lt;span class="line">&lt;span class="cl">curl -d &lt;span class="s2">&amp;#34;param1=value1&amp;amp;param2=value2&amp;#34;&lt;/span> http://example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于 JSON 数据：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -d &lt;span class="s1">&amp;#39;{&amp;#34;key1&amp;#34;:&amp;#34;value1&amp;#34;, &amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;}&amp;#39;&lt;/span> -H &lt;span class="s2">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> http://example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>-F&lt;/code> 或 &lt;code>--form&lt;/code>: 用于发送 multipart/form-data 格式的数据，通常用于文件上传。&lt;/p>
&lt;ul>
&lt;li>参数&lt;code>&amp;quot;文件名=@path&amp;quot;&lt;/code>,还可以指定类型&lt;code>&amp;quot;文件名=@path;type=MIME&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -F &lt;span class="s2">&amp;#34;file=@filename.txt&amp;#34;&lt;/span> http://example.com/upload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>-o&lt;/code> 或 &lt;code>--output&lt;/code>: 将响应输出到文件，而不是显示在终端上。默认当前目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -o output.html http://example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;code>-O&lt;/code>: 将响应保存到本地文件，文件名与远程文件的文件名相同。在当前目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -O http://example.com/file.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-s&lt;/code> 或 &lt;code>--silent&lt;/code>: 静默模式，不显示进度或错误消息。常用S组合使用，显示错误消息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-v&lt;/code> 或 &lt;code>--verbose&lt;/code>: 详细模式，显示详细的通信过程，包括请求头和响应头。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-i&lt;/code>: 显示响应头信息以及返回的内容 body。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-I&lt;/code>: 只显示响应头信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-u&lt;/code> 用户名:密码: 指定用户名和密码进行身份验证。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -u username:password http://example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>-L&lt;/code>: 跟随重定向。当 HTTP 响应是一个重定向时，curl 会自动获取重定向后的内容。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>-k&lt;/code> 或 &lt;code>--insecure&lt;/code>: 允许连接到不安全的 SSL 站点，即忽略 SSL 证书验证。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>常用组合：&lt;code>curl -fsSL&lt;/code>，默认get请求。&lt;/p>
&lt;ul>
&lt;li>f不显示客户端错误。&lt;/li>
&lt;li>s不显示进度、错误消息。配合S显示错误消息&lt;/li>
&lt;li>L接受重定向。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="wget">
&lt;a href="#wget" class="header-anchor">#&lt;/a>
wget
&lt;/h2>&lt;p>&lt;code>wget&lt;/code> 是一个在 Unix 和 Linux 系统上常用的命令行工具，用于从网络上下载文件。&lt;/p>
&lt;p>优点：&lt;/p>
&lt;ul>
&lt;li>支持断点续传：如果下载过程中连接中断，可以在之后从断点处继续下载。&lt;/li>
&lt;li>支持递归下载：可以下载网页上的所有链接文件，并重建目录结构。&lt;/li>
&lt;li>强大的重试机制：在下载过程中如果网络出现问题，&lt;code>wget&lt;/code> 会自动重试，直到下载完成。&lt;/li>
&lt;li>后台执行：支持在后台运行下载任务，用户无需保持登录状态。&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="#curl" >curl&lt;/a>没有以上优点，但它支持更多的协议。wget只支持HTTP、HTTPS和FTP协议。curl使用更广泛。&lt;/p>
&lt;p>安装：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>linux系统：根据你的Linux发行版，使用相应的包管理器来安装wget。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于Debian/Ubuntu系统，使用apt-get命令安装：&lt;code>sudo apt install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于CentOS/Fedora系统，使用yum命令安装：&lt;code>sudo yum install wget&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于Arch Linux系统，使用pacman命令安装：&lt;code>sudo pacman -S wget&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>windows系统：&lt;/p>
&lt;ul>
&lt;li>官网&lt;a class="link" href="https://www.gnu.org/software/wget/" target="_blank" rel="noopener"
>GNU Wget&lt;/a>下载安装或其他可靠的软件下载，然后路径添加到环境变量path中。&lt;/li>
&lt;li>或者安装&lt;a class="link" href="https://www.msys2.org/" target="_blank" rel="noopener"
>msys2&lt;/a>利用pacman包管理器安装。【推荐】：&lt;code>sudo pacman -S wget&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>macos系统：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>对于macOS，使用&lt;a class="link" href="https://github.com/Homebrew/brew" target="_blank" rel="noopener"
>Homebrew&lt;/a>包管理器来安装wget。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">brew&lt;/span> &lt;span class="nx">install&lt;/span> &lt;span class="nx">wget&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>基本使用&lt;/strong>：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>-b, &amp;ndash;background&lt;/strong>：在后台执行下载任务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-c, &amp;ndash;continue&lt;/strong>：继续下载之前未完成的文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-r, &amp;ndash;recursive&lt;/strong>：递归下载，下载指定 URL 中的所有链接。可以下载整个目录及其子目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">wget -r http://www.example.com/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：在使用递归下载时，建议加上 &lt;code>-np&lt;/code> 和 &lt;code>-nH&lt;/code> 选项，以避免下载过多的不必要文件和创建复杂的目录结构。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-np, &amp;ndash;no-parent&lt;/strong>：不递归下载上级目录。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-nH, &amp;ndash;no-host-directories&lt;/strong>：不创建主机目录，将文件保存在当前目录。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-P DIRECTORY, &amp;ndash;directory-prefix=DIRECTORY&lt;/strong>：将下载的文件保存到指定的目录。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">wget -P /tmp http://www.example.com/file.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>-O FILE, &amp;ndash;output-document=FILE&lt;/strong>：将下载的文件保存为指定的文件名。如果存在会覆盖。&lt;code>-N&lt;/code>（时间戳检查），如果旧会覆盖，反之不会。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">wget -O new_file.zip http://www.example.com/file.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>-nc, &amp;ndash;no-clobber&lt;/strong>：如果文件已经存在，不覆盖原有文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-nv, &amp;ndash;no-verbose&lt;/strong>：下载时只显示更新和出错信息，不显示详细的执行过程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-v, &amp;ndash;verbose&lt;/strong>：详细模式，增加输出信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-q, &amp;ndash;quiet&lt;/strong>：静默模式，减少输出信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&amp;ndash;no-check-certificate&lt;/strong>：下载 HTTPS 网站资源时，跳过证书检测过程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-t NUM 或 &amp;ndash;tries=NUM&lt;/strong>：指定最大尝试次数。如果下载失败，wget 会尝试重新下载指定的次数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-U AGENT 或 &amp;ndash;user-agent=AGENT&lt;/strong>：指定 User-Agent 字符串。这可以用来伪装为不同的浏览器或客户端。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-N 或 &amp;ndash;timestamping&lt;/strong>：如果本地文件存在且时间戳较新，则不重新下载文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-T SEC 或 &amp;ndash;timeout=SEC&lt;/strong>：指定超时时间（以秒为单位）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-A TYPES 或 &amp;ndash;accept=TYPES&lt;/strong>：指定下载文件的类型。例如，&lt;code>-A jpg,png,gif&lt;/code> 表示只下载 jpg、png 和 gif 文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>-d 或 &amp;ndash;debug&lt;/strong>：打印调试输出。这会在标准错误上输出大量信息，通常用于诊断问题。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>常用组合：&lt;/p>
&lt;p>&lt;code>wget -O-&lt;/code>:O表示指定文件名，后面-表示没有指定文件名，内容将输出到TTY。&lt;/p>
&lt;p>通常配合&lt;code>bash -c &amp;quot;$(wget -O- url)&amp;quot;&lt;/code>运行脚本。url为脚本地址。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>其中$()表示在当前TTY中运行子命令，下载脚本。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>[bash -c](#bash -c)表示将下载的字符串做为命令执行。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="bash--c">
&lt;a href="#bash--c" class="header-anchor">#&lt;/a>
bash -c
&lt;/h2>&lt;p>&lt;code>bash -c&lt;/code> 命令用于在 Bash shell 中执行一个字符串作为命令。&lt;/p>
&lt;p>&lt;strong>基本语法&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">bash -c &lt;span class="s1">&amp;#39;command_string&amp;#39;&lt;/span> &lt;span class="o">[&lt;/span>arg0 &lt;span class="o">[&lt;/span>arg1 ...&lt;span class="o">]]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>command_string&lt;/code> 是你想要执行的命令字符串。&lt;/li>
&lt;li>&lt;code>arg0&lt;/code>、&lt;code>arg1&lt;/code> 等是可选的，它们会被用作 &lt;code>$0&lt;/code>、&lt;code>$1&lt;/code>、&lt;code>$2&lt;/code> 等 shell 变量在 &lt;code>command_string&lt;/code> 内部。
&lt;ul>
&lt;li>注意这里的$0并不是脚本名或终端名，而是第一个参数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>字符串可以用&lt;code>&amp;quot;&amp;quot;/''&lt;/code>，区别在于双引号会转义特殊字符，单引号不会。执行脚本时建议双引号。&lt;/li>
&lt;/ul>
&lt;p>示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ bash -c &lt;span class="s1">&amp;#39;echo Hello, World!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello, World!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ bash -c &lt;span class="s1">&amp;#39;echo $0 $1&amp;#39;&lt;/span> bash &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bash &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bash -c &amp;#34;$(wget -O- https://gist.githubusercontent.com/lss233/2fdd75be3f0724739368d0dcd9d1367d/raw/62a790da4a391af096074b3355c2c2b7ecab3c28/chatgpt-mirai-installer-gocqhttp.sh)&amp;#34; chatgpt-qq-bot安装脚本&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="pacman">
&lt;a href="#pacman" class="header-anchor">#&lt;/a>
pacman
&lt;/h2>&lt;p>Pacman是Arch Linux及其衍生发行版（如Manjaro、EndeavourOS等）使用的包管理器。总结它，是因为我们可以在Windows上安装msys2来使用pacman包管理器，进而在Windows上安装Linux命令。&lt;/p>
&lt;p>&lt;strong>基本用法&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sudo pacman &lt;span class="o">[&lt;/span>选项&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>软件名&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>常用选项&lt;/strong>如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>-S&lt;/code>：安装软件包、软件源列表。
&lt;ul>
&lt;li>&lt;code>-y&lt;/code>：刷新软件源列表。&lt;/li>
&lt;li>&lt;code>-u&lt;/code>：更新软件包到最新版。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>以上三个选项可以组合使用。&lt;strong>常用&lt;/strong>：
&lt;ul>
&lt;li>&lt;code>-Syu&lt;/code>：更新软件源列表，并升级已安装的包到最新版。【推荐】*&lt;/li>
&lt;li>&lt;code>-Sy&lt;/code>：更新软件源列表并安装。【推荐】*&lt;/li>
&lt;li>&lt;code>-Su&lt;/code>：只升级已安装的包到最新版。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-S package_name&lt;/code>：&lt;strong>安装软件包&lt;/strong>。多个用空格隔开。【推荐】*&lt;/li>
&lt;li>&lt;code>-R package_name&lt;/code>：卸载软件包（会保留依赖）。
&lt;ul>
&lt;li>&lt;code>-Rs package_name&lt;/code>：&lt;strong>卸载一个软件包及其依赖（未被其他包使用的依赖）&lt;/strong>。&lt;/li>
&lt;li>&lt;code>-Rns package_name&lt;/code>：&lt;strong>卸载一个软件包并删除不再使用的依赖&lt;/strong>。【推荐】*&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-Sc&lt;/code>：清理未使用的包缓存。
&lt;ul>
&lt;li>&lt;code>-Scc&lt;/code>：清理所有包缓存。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-Ss keyword&lt;/code>：搜索包含关键字的软件包。
&lt;ul>
&lt;li>&lt;code>-Si package_name&lt;/code>：显示软件包信息。【推荐】*&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-Q&lt;/code>：列出所有已安装的软件包。
&lt;ul>
&lt;li>&lt;code>-Qs keyword&lt;/code>：列出已安装的包含关键字的软件包。【推荐】&lt;/li>
&lt;li>&lt;code>-Qi package_name&lt;/code>：显示已安装软件包的信息。【推荐】*&lt;/li>
&lt;li>&lt;code>-Ql package_name&lt;/code>：列出软件包中包含的文件。【推荐】&lt;/li>
&lt;li>&lt;code>-Qk&lt;/code>：检查系统中所有已安装包的完整性。
&lt;ul>
&lt;li>&lt;code>-Qkk package_name&lt;/code>：检查指定软件包的完整性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr></description></item></channel></rss>